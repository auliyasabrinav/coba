name: CI MLflow Training

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train:
    runs-on: ubuntu-latest
    env:
      # —— MLflow / DagsHub ——
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TOKENS }}   # token = username
      MLFLOW_TRACKING_PASSWORD: ""                             # password dikosongkan
      # —— Docker ——
      DOCKER_IMAGE_NAME: bank-mlflow                           # ← nama image yang diminta

    steps:
      # 1 – Checkout kode
      - uses: actions/checkout@v3

      # 2 – Setup Python
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      # 3 – Install dependensi
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            pandas numpy matplotlib seaborn scikit-learn joblib \
            mlflow==2.7.0          # versi yang kompatibel dengan DagsHub

      # 4 – Set MLflow Tracking URI
      - name: Set MLflow Tracking URI
        run: echo "MLFLOW_TRACKING_URI=https://dagshub.com/hara29/bank-attrition-modelling.mlflow" >> $GITHUB_ENV

      # 5 – Jalankan MLflow Project
      - name: Run MLflow Project
        shell: bash -l {0}
        run: mlflow run MLProject --experiment-name "RandomForest_ManualLogging" --env-manager=local

      # 6 – Ambil run_id terakhir dari DagsHub
      - name: Get latest run_id from DagsHub
        id: get-run
        run: |
          echo "Fetching latest run ID..."
          echo "run_id=$(python - <<'PY'
          import mlflow, os
          mlflow.set_tracking_uri('https://dagshub.com/hara29/bank-attrition-modelling.mlflow')
          client = mlflow.tracking.MlflowClient()
          exp = client.get_experiment_by_name('RandomForest_ManualLogging')
          run = client.search_runs([exp.experiment_id], order_by=['start_time DESC'])[0]
          print(run.info.run_id)
          PY
          )" >> $GITHUB_OUTPUT

      # 7 – Download artefak model
      - name: Download model artifact from DagsHub
        run: |
          mlflow artifacts download \
            -u "runs:/${{ steps.get-run.outputs.run_id }}/model" \
            -d model_dir

      # 8 – Build Docker image
      - name: Build Docker Image
        run: |
          mlflow models build-docker -m model_dir -n $DOCKER_IMAGE_NAME

      # 9 – Login Docker Hub
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10 – Tag & push image
      - name: Tag Docker Image
        run: docker tag $DOCKER_IMAGE_NAME ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME:latest

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME:latest

      # 11 – Upload artefak model ke GitHub
      - uses: actions/upload-artifact@v4
        with:
          name: mlflow-model
          path: model_dir
